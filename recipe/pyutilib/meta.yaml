package:
  name: pyutilib
  version: "5.2.3601"

source:
  fn: PyUtilib-5.2.3601.tar.gz
  url: https://pypi.python.org/packages/source/P/PyUtilib/PyUtilib-5.2.3601.tar.gz
  md5: 0c0d54632c70427c84a21d31f56c1a5b
#  patches:
   # List any patch files here
   # - fix.patch

build:
  number: 1

  # noarch_python: True
  preserve_egg_dir: True
  entry_points:
    # Put any entry points (scripts to be generated automatically) here. The
    # syntax is module:function.  For example
    #
    # - pyutilib = pyutilib:main
    #
    # Would create an entry point called pyutilib that calls pyutilib.main()

    - test.pyutilib=pyutilib.dev.runtests:runPyUtilibTests
    - lbin=pyutilib.dev.lbin:main
    - lpython=pyutilib.dev.lpython:main
    - pypi_downloads=pyutilib.dev.pypi_downloads:main
    - replacecopyright=pyutilib.dev.replaceCopyright:main
    - checkcopyright=pyutilib.dev.checkCopyright:main
    - pyutilib_test_driver=pyutilib.autotest.driver:main
    - dispatch_srvr=pyutilib.pyro.dispatch_srvr:main

requirements:
  build:
    - python
    - setuptools
    - nose
    - six

  run:
    - python
    - setuptools
    - xmlrpc2 [py2k]
    - nose
    - six

test:
  # Python imports
  imports:
    - pyutilib
    - pyutilib.autotest
    - pyutilib.autotest.tests
    - pyutilib.common
    - pyutilib.component
    - pyutilib.component.app
    - pyutilib.component.app.tests
    - pyutilib.component.config
    - pyutilib.component.config.tests
    - pyutilib.component.core
    - pyutilib.component.core.tests
    - pyutilib.component.executables
    - pyutilib.component.loader
    - pyutilib.component.loader.tests
    - pyutilib.dev
    - pyutilib.enum
    - pyutilib.enum.tests
    - pyutilib.excel
    - pyutilib.excel.tests
    - pyutilib.math
    - pyutilib.math.tests
    - pyutilib.misc
    - pyutilib.misc.tests
    - pyutilib.misc.tests.import_data
    - pyutilib.misc.tests.import_data.a
    - pyutilib.misc.tests.import_data.b
    - pyutilib.ply
    - pyutilib.pyro
    - pyutilib.services
    - pyutilib.subprocess
    - pyutilib.subprocess.tests
    - pyutilib.th
    - pyutilib.th.tests
    - pyutilib.workflow
    - pyutilib.workflow.tests

  commands:
    # You can put test commands to be run here.  Use this to test that the
    # entry points work.

    - test.pyutilib --help
    - lpython --help
    - pypi_downloads --help
    - pyutilib_test_driver --help
    - dispatch_srvr --help

  # You can also put a file called run_test.py in the recipe that will be run
  # at test time.

  # requires:
    # Put any additional test requirements here.  For example
    # - nose

about:
  home: https://software.sandia.gov/trac/pyutilib
  license: BSD License
  summary: 'PyUtilib: A collection of Python utilities'

# See
# http://docs.continuum.io/conda/build.html for
# more information about meta.yaml
